// 다음은 컴퓨터 게임의 병사(marine)를 클래스로 정의한 것이다.
// 이 클래스의 멤버 중에 static을 붙여야 하는 것은 어떤 것들이고, 그 이유는 무엇인가?
// (단, 모든 병사의 공격력과 방어력은 같아야 한다.)

public class prac06_09 {		// 연습문제 6-9
}

class Marine {
	int x=0, y=0;		// Marine의 위치좌표(x,y)
	int hp = 60;		// 현재 체력
	int weapon = 6; 	// 공격력
	int armor  = 0; 	// 방어력
	
	void weaponUp() {
		weapon++;
	}
	
	void armorUp() {
		armor++;
	}
	
	void move(int x, int y) {
		this.x = x;
		this.y = y;
	}
}

// static을 붙여야 하는 것.
// weapon, weaponUp, armor, armorUp 
// 아이유 : 모든 병사의 공격력과 방어력은 같아야한다.
// 자! 한번 생각해봐요. 모든 병사의 공격력이랑 방어력이 같데요.?
// 그러면 있잖아요. Up을 해도 똑같아야 되고요, Down을 해도 똑같아야 되요. 맞죠? 그러면 공통사항이니깐
// Up메서드엔 static이 들어가야되요! 맞죠? 근데 또 있잖아요? 생각을 해봐보세요.
// 자 static 메서드로 한다 쳐요! 근데 static메서드에 iv 사용 가능해요? 안 가능해요? 
// 아이 뭘 당연히 안되죠~! 뭘 가능하다고 말해요? 6장 동강 미친듯이 보고 오세요!
// 다~앙연히 static메서드에 iv가 안 들어가니깐 자동적으로 어떻게?! 
// 그릏죠~ weapon이랑, armor에도 static으로 선언해서 static메서드에서 참조가 가능하도록 해야한다! 이 말입니다~!
// 그래서 답은 뭐다? 웨뽄! 웨뽄업! 아멀. 아멀.업! 
// -끝- 쉽죠? 재밌죠?
