public class prac03_01 {

	public static void main(String[] args) {
		
		int x = 2;
		int y = 5;
		char c = 'A';	// 'A'문자 코드는 65
		
		System.out.println(1 + x << 33); 				        // 11
		System.out.println(y >= 5 || x < 0 && x > 2);	  // true
		System.out.println(y += 10 - x++);				      // 11
		System.out.println(x+=2);						            // 7
		System.out.println(!('A' <= c && c <= 'Z'));	// false
		System.out.println('C'-c);					            // 2
		System.out.println('5'-'0');				            // 5
		System.out.println(c+1);						            // 66  >>>>>> 연산과정 중 1이 int이기 때문에 'A'도 int형으로 65로 연산되서 결과는 int형인 66이 나온다.
		System.out.println(++c);						            // 66 > B  >> 'A'에서 +1이 되는데, 형변환이 발생하지 않는다. 그래서 'B'로 출력 됨.
		System.out.println(c++);						            // 66 > B  >> 위의 식 ++c에 의해서 c는 'B'인데 c++은 'B'출력 후 증가 시킴 그래서 밑에 c는 'C'가 나옴.
		System.out.println(c);							            // 65 > A, C  >> 위의 말대로  
                                                    /* 예상 > 정답 ( 19번 예외. 예상 > 예상 , 정답 >> 해설)
		
	}

}
//   16번 라인 ~ 19번 라인까지 예상과 다르게 나옴. 16번 라인은 정답이긴 함. 하지만, 생각하던 것과의 이유가 달라서 오답이라고 표시
//   심지어 19번 같은 경우는 2번 틀렸다...ㅡㅡㅡㅡㅡㅡㅡ 괜찮다...지금이라도 알아서 다행이다.
//   여튼 몰랐던 것 
//    1.증감연산자는 대입연산자 없이도 값이 저장되는 연산자였던 것.
//    2.char형은 내부에 문자가 아닌 유니코드로 저장된다는 것을 생각해서, 문자가 출력될 것을 숫자로 예상한 것..
//   >>>컴퓨터는 문자를 모른다. 0하고 1밖에 모른다. 
//    그러나 char 타입으로 선언된 변수 c에 증가연산자'++'이 연산되었다해도, 형변환이 일어나지 않았기 때문에, 결국 'A'(유니코드 65) 다음인 'B'(유니코드 66)가 출력된다.
//    여튼 저 두 가지로 인해서 4문제를 틀렸다.
// 다음엔 더 잘하자.
